---
# LICENSE:         Public Domain

#    ansible-playbook install/install-debug-tools.yml -i hosts
#    ansible-playbook install/install-debug-tools.yml -i hosts --extra-vars="agree=yes full=yes"

# Based on https://github.com/fititnt/ap-application-load-balancer/blob/master/tasks/devtools/devtools.yml

- name: "ansible-ad-hoc | install-debug-tools.yml"
  hosts: all
  gather_facts: no

  vars_prompt:
    - name: agree
      prompt: "Appling install-debug-tools.yml TO {{ ansible_play_hosts }} [Packages: {{ packages_all }}]. This script will autodetect and install ONLY packages related to services installed. Continue? (yes)"
      private: no
      default: "yes"

    - name: full
      prompt: "Apply even extra packages? {{ packages_base_extra }}. (no)"
      private: no
      default: "no"

  vars:
    packages_base:
      - htop
      - multitail

    packages_base_extra:
      - glances

    packages_haproxy:
      - hatop

    packages_all:
      packages_base: "{{ packages_base }}"

  pre_tasks:
    - name: "ansible-ad-hoc | install-debug-tools.yml | agree?"
      fail:
        msg: "ansible-ad-hoc/test/* are experimental/for testing only. user did not agree, aborting"
      when: "agree != 'yes' and agree != 'y'"

    - name: "ansible-ad-hoc | install-debug-tools.yml | gather_facts minimal"
      setup:
        gather_subset:
          - "!all"

    - name: "ansible-ad-hoc | install-debug-tools.yml | Debian? Ubuntu?"
      fail:
        msg: "test/install-debug-tools.yml Tested only on Debian based distros [This host: {{ ansible_distribution }}]"
      when: "ansible_distribution != 'Debian' and ansible_distribution != 'Ubuntu'"

  tasks:

    - name: "ansible-ad-hoc | install-debug-tools.yml | service haproxy status"
      shell: service haproxy status
      ignore_errors: yes
      changed_when: false
      register: service_haproxy_status

#    - name: "ansible-ad-hoc | install-debug-tools.yml | sudo apt install {{ redis_packages }}"
#      apt:
#        name: "{{ redis_packages }}"
#      when:
#        - "service_haproxy_status.failed != true"
        # - "force is not defined and (force != 'yes' and force != 'y')"